apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "spring-petclinic.fullname" . }}
  labels:
    {{- include "spring-petclinic.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "spring-petclinic.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "spring-petclinic.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "spring-petclinic.serviceAccountName" . }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          env:
            - name: SERVER_SERVLET_CONTEXT_PATH
              value: {{ .Values.app.contextPath | quote }}
            # Activate the Aurora profile
            - name: SPRING_PROFILES_ACTIVE
              value: {{ .Values.app.springProfile | default "default" | quote }}
            # Force database type to MySQL
            - name: DATABASE
              value: "mysql"
            # AWS Region configuration
            - name: AWS_REGION
              value: {{ .Values.aws.region | quote }}
            - name: AWS_DEFAULT_REGION
              value: {{ .Values.aws.region | quote }}
            # Initialize pet types from S3 
            - name: APP_INIT_PET_TYPES_BUCKET
              value: {{ .Values.initData.bucket | quote }}
            - name: APP_INIT_PET_TYPES_KEY
              value: {{ .Values.initData.objectKey | quote }}
            - name: APP_INIT_PET_TYPES_KMS_ENCRYPTED
              value: {{ ternary "true" "false" .Values.initData.kms.enabled | quote }}
            - name: APP_INIT_PET_TYPES_KMS_KEY_ALIAS
              value: {{ .Values.initData.kms.keyAlias | quote }}
            # Database configuration - direct configuration
            - name: MYSQL_URL
              value: "{{ .Values.database.host }}/{{ .Values.database.name }}"
            - name: MYSQL_USER
              value: "{{ .Values.database.username }}"
            - name: MYSQL_PASS
              valueFrom:
                secretKeyRef:
                  name: spring-petclinic-db-credentials
                  key: password
                  optional: true
          {{- /* Probe value safety defaults */ -}}
          {{- $readiness := (default (dict "initialDelaySeconds" 30 "periodSeconds" 5 "failureThreshold" 6 "timeoutSeconds" 3) .Values.probes.readiness) -}}
          {{- $liveness := (default (dict "initialDelaySeconds" 120 "periodSeconds" 15 "failureThreshold" 3 "timeoutSeconds" 5) .Values.probes.liveness) -}}
          {{- if .Values.probes.startup.enabled }}
          startupProbe:
            httpGet:
              path: {{ .Values.app.healthPath | default (.Values.app.contextPath | default "/") | quote }}
              port: http
            initialDelaySeconds: {{ .Values.probes.startup.initialDelaySeconds }}
            periodSeconds: {{ .Values.probes.startup.periodSeconds }}
            failureThreshold: {{ .Values.probes.startup.failureThreshold }}
            timeoutSeconds: {{ .Values.probes.startup.timeoutSeconds }}
          {{- end }}
          readinessProbe:
            httpGet:
              path: {{ .Values.app.healthPath | default (.Values.app.contextPath | default "/") | quote }}
              port: http
            initialDelaySeconds: {{ $readiness.initialDelaySeconds }}
            periodSeconds: {{ $readiness.periodSeconds }}
            failureThreshold: {{ $readiness.failureThreshold }}
            timeoutSeconds: {{ $readiness.timeoutSeconds }}
          livenessProbe:
            httpGet:
              path: {{ .Values.app.healthPath | default (.Values.app.contextPath | default "/") | quote }}
              port: http
            initialDelaySeconds: {{ $liveness.initialDelaySeconds }}
            periodSeconds: {{ $liveness.periodSeconds }}
            failureThreshold: {{ $liveness.failureThreshold }}
            timeoutSeconds: {{ $liveness.timeoutSeconds }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- if .Values.podAntiAffinity.enabled }}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values:
                - {{ include "spring-petclinic.name" . }}
            topologyKey: {{ .Values.podAntiAffinity.topologyKey }}
      {{- end }}

      # Optional: tolerations can be added later via values
      # tolerations: []
