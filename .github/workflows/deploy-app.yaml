name: Deploy Spring PetClinic Application

on:
  push:
    branches:
      - main
    paths:
      - 'deployment-configs/spring-petclinic/**'
      - '.github/workflows/deploy-app.yaml'
  pull_request:
    types: [closed]
    branches:
      - main
    paths:
      - 'deployment-configs/spring-petclinic/**'
      - '.github/workflows/deploy-app.yaml'

# Define environment variables for reuse across jobs
env:
  AWS_REGION: ap-south-1
  CLUSTER_NAME: petclinic-cluster
  ECR_REPOSITORY: spring-petclinic
  IMAGE_TAG: ${{ github.sha }}

# Ensure only one deployment workflow runs at a time
concurrency:
  group: app-deployment-${{ github.ref }}
  cancel-in-progress: false

jobs:
  build-and-deploy:
    name: Build and Deploy PetClinic
    # Only run this job on merged PRs or direct pushes to main
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.merged == true)
    runs-on: ubuntu-latest
    permissions:
      id-token: write  # Required for OIDC authentication
      contents: read   # Required to check out code

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::906766085108:role/github-actions-terraform
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Setup Helm
        uses: azure/setup-helm@v3
        with:
          version: 'v3.14.2'

      - name: Setup kubectl
        uses: azure/setup-kubectl@v3
    

      - name: Update kubeconfig
        run: aws eks update-kubeconfig --name ${{ env.CLUSTER_NAME }} --region ${{ env.AWS_REGION }}

      - name: Deploy Spring PetClinic Application
        run: |
          echo "Deploying Spring PetClinic application"
        
          
          # Deploy application using Helm
          helm upgrade --install spring-petclinic deployment-configs/spring-petclinic \
            --namespace petclinic --create-namespace \
            --set image.repository=$(echo $IMAGE | cut -d: -f1) \
            --set image.tag=$(echo $IMAGE | cut -d: -f2) \
            -f deployment-configs/spring-petclinic/values.yaml \
            --wait --timeout 5m
            
      - name: Verify Deployment
        run: |
          echo "Verifying deployment..."
          kubectl get deployments -n petclinic
          kubectl get pods -n petclinic
          kubectl get svc -n petclinic
          kubectl get ingress -n petclinic
